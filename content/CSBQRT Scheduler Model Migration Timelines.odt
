<h2 id="benefits-and-impact">Benefits and Impact</h2>
<ul>
<li><p><strong>Increased Throughput</strong>:<br />
Our preliminary guestimates indicate that the QRT scheduler can boost
overall throughput by approximately 15%. Given the complexity of ad
space management, we anticipate even greater improvements as the system
continues to mature and optimize.</p></li>
<li><p><strong>Improved Developer Velocity by System
Simplification</strong>:<br />
We describe all requirements in a single place as succinct linear
program, instead of in 10s of docs. This allows us to:</p>
<ol type="1">
<li>Express business and system requirements succinctly and easily see
and quantify conflicting business objectives. This way we can ensure
that our technical implementations are closely aligned with our
strategic goals. Examples issues this will alleviate are recent
deadlocks on increasing small experiment limits, better support for
scaled lift, and how exactly to aleviate L4 alignment.</li>
<li>Dimensionality Reduction allows us to supports quick in-memory
implementations of calculations that are otherwise 2 week or month-long
projects (examples- any packing algorithm or any tool that relies on
traffic calculations, like ‘traffic overlaps’, ‘how many segments’,
various ‘what if’ scenarios tools).</li>
</ol></li>
<li><p><strong>Enhanced Flexibility</strong>:<br />
Our new model provides greater flexibility in defining the objective
function, enabling us to directly align it with our KPI goals. This
reduces ambiguity and allows us to optimize ROI more effectively
compared to the current greedy algorithm, which behaves unpredictably
when the objective function changes.</p></li>
<li><p><strong>Flexibility, Scalability and
Future-Proofing</strong>:<br />
The system is parametrisable to support business objective adjustments.
For example , we can adapt to evolving definitions of a “good
experiment” by simply adjusting constraints, without requiring
significant changes to the system design. Similarly, we can flexibly
change limits of CSBQRT experiment subtypes, better supporting scaled
lift, small experiments. Same for the objective function, which can be
aligned tightly to whatever topline metric we decide is most important.
The constsaint-based abstraction is also easily extensible to onboard
Full BQRT slots if desired as well (backend needs to be designed,
though).</p>
<ul>
<li><strong>Dimensionality Reduction synergy with Clustering-related
topics</strong>:<br />
Dimensionality reduction and clustering are closely related. Clustering
is a <strong>compressed description</strong> of an adunits in terms of
their co-presence in auctions, and dimensionality reduction - in terms
of co-presence in experiment traffic requests. It’s likely the latter
can enhance a regression model to faster predict assignment latency, an
issue that plagues us, reducing useable traffic by 18-30%. It can also
help find isolated markets around around custom flags, exploratory
clusters, etc.</li>
</ul></li>
</ul>
<hr />
<p><em>Note: The outlined benefits are based on our current assumptions
and preliminary estimates. Actual impacts may vary based on
implementation success and evolving project dynamics.</em>
<strong>Project Milestones and Estimated Timelines</strong> *Note: The
estimated times are rough approximations intended for high-level
planning purposes and may need adjustment based on resource availability
and project scope refinements.</p>
<table>
<colgroup>
<col style="width: 1%" />
<col style="width: 79%" />
<col style="width: 19%" />
</colgroup>
<thead>
<tr>
<th>Step</th>
<th>Description</th>
<th>Estimated Time (in work days)</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><strong>Initial Dimensionality Reduction Implementation and
Algorithm Impact Study</strong>: <br>Data collection, prototypes of dim
reduction and algorithm part , validation of dimensionality reduction
for the eligibility matrix.</td>
<td>15</td>
</tr>
<tr>
<td>1</td>
<td><strong>Secondary Feasibility Study</strong> : Ironing out details,
such as handling very small adsets, etc</td>
<td>6</td>
</tr>
<tr>
<td>2</td>
<td><strong>Assignment Backend Modifications</strong>: Redesign and
modify the assignment backend to work with dimensionally reduced data,
including testing and validation.</td>
<td>15</td>
</tr>
<tr>
<td>3</td>
<td><strong>Scheduler Model Implementation</strong>: Extend and robusify
the mathematical scheduling model, including handling urgent
experiments, deadlines, priority swap, experiment overlap analysis,
traffic estimates, and suggested modifications.</td>
<td>15</td>
</tr>
<tr>
<td>4</td>
<td><strong>Interactive Scheduling System Development</strong>:
Migration of redesigned scheduler to new algorithm and computational
tooling</td>
<td>13</td>
</tr>
<tr>
<td>5</td>
<td><strong>Scheduling Flow and User Communications
Implementation</strong>: Implement the overall scheduling flow,
including user communications, escalations, and integration.</td>
<td><del>15</del>(handled as part of ‘scheduler redesign’
projects?)</td>
</tr>
<tr>
<td>6</td>
<td><strong>Testing, Validation, and Deployment</strong>: Perform
system-wide testing, address bugs, refine features, and deploy the new
scheduling system.</td>
<td>10</td>
</tr>
</tbody>
</table>
<p><strong>Total Estimated Time</strong>: <strong>74 work
days</strong></p>
<hr />
<p><strong>Major Risks</strong></p>
<ol type="1">
<li><p><strong>Dimensionality Reduction Feasibility</strong>: The
dimensionality reduction may not preserve essential properties of the
data, leading to inadequate model performance. This would necessitate
dropping the approach. <strong>Mitigation</strong> : Proposed initial 13
work day ‘impact’ feasibility study. If that goes okay, additional 6
days to iron out out some details, like what to do with very small
adsets, etc.</p></li>
<li><p><strong>Integration Complexity</strong>: Modifying the assignment
backend and integrating with existing systems might be more complex than
anticipated, potentially leading to increased development time.
<strong>Mitigation</strong> : If initial study goes as expected, develop
hand in hand with the ‘scheduler redesign’ project to plan
well.</p></li>
<li><p><strong>Stakeholder Alignment on Priority Changes</strong>:
Removing or altering the priority system may face resistance from
stakeholders. <strong>Mitigation</strong>: Provide a lot of consultative
features [[CSBQRT.Scheduler.Model#Model -&gt; Interactive Scheduling
System]] Discuss with team.</p></li>
<li><p><strong>Testing and Validation Issues</strong>: System-wide
testing might reveal critical issues or bugs that require significant
time to fix, potentially delaying deployment.
<strong>Mitigation</strong>: Plan for additional time for testing and
validation.</p></li>
<li><p><strong>Unresolved Questions about Current System</strong>: For
example, what is the accuracy of the current estimator? Is it’s
fundamental ‘adset equilibrium’ assumption reasonable? Does the
inaccuracy? <strong>Mitigation</strong>: Unclear, as it’s hard to plan
time for such ‘understand work’ currently as well. For example, a
‘custom flag changed’ detector was proposed and not
prioritised.</p></li>
</ol>
<hr />
